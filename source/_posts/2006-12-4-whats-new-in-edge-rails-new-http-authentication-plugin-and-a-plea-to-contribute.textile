---
title: "New Http Authentication Plugin - And a Plea to Contribute"
author: "Ryan Daigle"
categories:
  - "what-s-new-in-edge-rails"
---
 
If you're just not happy with some of the "existing":http://blog.caboo.se/articles/2006/05/28/htpasswd-plugin "options":http://blog.codahale.com/tags/http-authentication/ out there for doing Http Authentication in Rails, we've got another entry into the market.  There's "now an official Rails http authentication plugin":http://dev.rubyonrails.org/changeset/5665 in the Rails repo that makes this a simple proposition.

A few convenient methods are now available to you in your controllers to hold your hand: @authenticate_or_request_with_http_basic@ that hands the basic username and password to a block for evaluation and @request_http_basic_authentication@ that asks the client to authenticate itself using http basic authentication.  Using them is pretty simple - their inclusion in an authentication filter seems to be the most intuitive use:

<pre><code>
class DocumentsController < ActionController
  before_filter :verify_access

  def show
    @document = @user.documents.find(params[:id])
  end

  # Use basic authentication in my realm to get a user object.
  # Since this is a security filter - return false if the user is not
  # authenticated.
  def verify_access
    authenticate_or_request_with_http_basic("Documents Realm") do |username, password|
      @user = User.authenticate(username, password)
    end
  end
end
</code></pre>

When the block of @authenticate_or_request_with_http_basic@ evaluates to false, @request_http_basic_authentication@ is invoked which requests that the user enter their credentials.  You can also manually invoke @request_http_basic_authentication@ if you are doing a mix of authentication methods and want to use http authentication only if session authentication fails etc...

So what's with the "plea"?  Well, digest authentication hasn't been added to the plugin yet - though the structure and framework as all but been laid at your feet to contribute the digest logic yourself.  Take a look at "HttpAuthentication::Digest":http://dev.rubyonrails.org/browser/plugins/http_authentication/lib/http_authentication/digest.rb and see how easy it would be to contribute back to your favorite framework.  Just fill in those tiny places that say stuff like @# Fancy nouncing goes here@ and @# You compute me@ and the world will revere you.

h3. References

* "~:caboose's _Htpasswd Plugin_":http://blog.caboo.se/articles/2006/05/28/htpasswd-plugin
* "Coda Hale's _Basic HTTP Authentication with Rails & simple_http_auth_":http://blog.codahale.com/tags/http-authentication/