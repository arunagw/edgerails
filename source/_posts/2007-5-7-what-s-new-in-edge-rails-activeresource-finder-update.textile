---
title: "ActiveResource Finder Update and Custom Headers"
author: "Ryan Daigle"
categories:
  - "what-s-new-in-edge-rails"
---
 
h1. ActiveResource find Updates

The ActiveResource @find@ method just got a "little bit of tightening":http://dev.rubyonrails.org/changeset/6646 with a new @:from@ option.  This option basically replaces the ability to call a "custom method":/articles/2007/4/26/what-s-new-in-edge-rails-activeresource-gets-custom-methods with a single argument to @find@ and makes @find@ a little less open-ended.

For instance, if before you were invoking a @recent@ custom method:

<notextile>
{% highlight ruby %}
Post.find(:recent)  #=> GET /posts/recent.xml
{% endhighlight %}
</notextile>

you will now need to declare the multiplicity or scope (@:all@ in this case) as the first argument and the custom method as the @:from@ option:

<notextile>
{% highlight ruby %}
Post.find(:all, :from => :recent)  #=> GET /posts/recent.xml
{% endhighlight %}
</notextile>

You can also do the same for singleton resources with the @:one@ scope:

<notextile>
{% highlight ruby %}
Post.find(:one, :from => :latest)  #=> GET /post/latest.xml
{% endhighlight %}
</notextile>

And if you just want to manually specify the location from which to get the post, you can use the actual string URI:

<notextile>
{% highlight ruby %}
Post.find(:one, :from => "/categories/1/latest.xml")  #=> GET /categories/1/latest.xml
{% endhighlight %}
</notextile>

So basically what's happened is that the first argument to @find@ has been tightened to allow either the resource id or the scope (@:all@, @:first@, @:one@) and any custom method or manual resource location has been moved to the @:from@ option.

h1. ActiveResource Custom Headers

ActiveResource was also recently updated to include the ability to set "custom headers":http://dev.rubyonrails.org/changeset/6624 per resource.

<notextile>
{% highlight ruby %}
class Post < ActiveResource::Base
  headers['X-MyHeader'] = 'ryan'
end
{% endhighlight %}
</notextile>

Every request from @Post@ will now include that header.

_Note:_ The original patch used @custom_headers@ but was since "changed to @headers@":http://dev.rubyonrails.org/changeset/6625

It's refreshing to see ActiveResource getting better and easier to use!